<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Perfushopping</title>
    <link rel="stylesheet" href="/css/consultar_producto.css">
    <script src="https://unpkg.com/html5-qrcode/minified/html5-qrcode.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/quagga/0.12.1/quagga.min.js"></script>
    <%- include('partes/header.ejs') %>
    <style>
        /* Reducimos y centramos el contenedor de la cámara */
        #cameraContainer {
            display: none; /* Oculto por defecto */
            align-items: center;
            justify-content: center;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 300px; /* Ancho adecuado para capturar el código de barras */
            height: 200px; /* Altura adecuada */
            background-color: rgba(0, 0, 0, 0.8);
            border-radius: 8px;
            padding: 10px;
            z-index: 1000;
        }

        /* Ajuste del área de cámara dentro del contenedor */
        #camera {
            width: 100%; /* Ocupa todo el contenedor */
            height: 100%;
            overflow: hidden;
            position: relative;
        }

        /* Estilo para el video de QuaggaJS */
        #camera video {
            width: 100% !important; /* Asegura que el video ocupe todo el contenedor */
            height: 100% !important;
            object-fit: cover; /* Ajusta el video al tamaño del contenedor */
        }

        /* Botón para cerrar la cámara */
        #closeCameraButton {
            position: absolute;
            top: 5px;
            right: 5px;
            background: #ff4d4d;
            border: none;
            color: white;
            padding: 5px;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div id="menu">
        <%- include('partes/navegacionOpcional.ejs') %>
    </div>
    <main class="main">
        <header class="perfushoppingtitle">
            <h1>PERFUSHOPPING</h1>
        </header>
        <div class="search-container">
            <input type="text" id="barcodeSearch" placeholder="Ingrese código de barras...">
            <button id="scanButton">Escanear código</button>
        </div>
        <div id="cameraContainer" class="hidden">
            <div id="camera"></div>
            <button id="closeCameraButton">Cerrar</button>
        </div>
        
        <div class="containerTable">
            <input type="text" id="descriptionSearch" placeholder="Buscar por descripción...">
            <div class="table-responsive">
                <table id="productTable">
                    <thead>
                        <tr>
                            <th>Código de Barra</th>
                            <th>Descripción</th>
                            <th>Variedad</th>
                            <th>Fecha</th>
                            <th>Precio</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </main>
    
    <script>
        const barcodeSearch = document.getElementById("barcodeSearch");
        let typingTimer;
        const typingInterval = 1000; // 1 segundo de espera

        // Event listeners para detectar cambios en el campo de búsqueda
        barcodeSearch.addEventListener("keyup", () => {
            clearTimeout(typingTimer);
            typingTimer = setTimeout(executeSearch, typingInterval);
        });

        barcodeSearch.addEventListener("keydown", () => {
            clearTimeout(typingTimer);
        });

        // Función para ejecutar la búsqueda
        function executeSearch() {
            const barcode = barcodeSearch.value.trim();

            // Solo realiza la búsqueda si el campo no está vacío
            if (barcode) {
                fetch(`/consultar-producto?barcode=${barcode}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error("Error en la respuesta del servidor");
                        }
                        return response.json(); // Procesa la respuesta como JSON
                    })
                    .then(data => {
                        updateTable(data); // Actualiza la tabla con los datos recibidos
                    })
                    .catch(error => console.error('Error en la solicitud:', error));
            }
        }

        // Función para actualizar la tabla con los datos
        function updateTable(data) {
            const tableBody = document.querySelector("#productTable tbody");
            tableBody.innerHTML = ""; // Limpia la tabla actual

            // Itera sobre los resultados y crea filas en la tabla
            data.forEach(producto => {
                const row = document.createElement("tr");

                row.innerHTML = `
                    <td class="p-1 col-id">${producto.codigo}</td>
                    <td class="p-1">${producto.descripcion}</td>
                    <td class="p-1">${producto.fecha}</td>
                    <td class="p-1">${producto.variedad || 'Sin variedad'}</td>
                    <td class="p-1">${producto.precio}</td>
                `;

                tableBody.appendChild(row); // Agrega la nueva fila a la tabla
            });
        }

        // Script para abrir la cámara y escanear código de barras
        document.getElementById('scanButton').addEventListener('click', function() {
            // Mostrar el contenedor de la cámara
            const cameraContainer = document.getElementById('cameraContainer');
            cameraContainer.style.display = 'flex';

            // Inicializar QuaggaJS
            Quagga.init({
    inputStream: {
        name: "Live",
        type: "LiveStream",
        target: document.querySelector('#camera'),
        constraints: {
            width: { ideal: 1280 },  // Resolución de ancho deseada
            height: { ideal: 720 },  // Resolución de altura deseada
            facingMode: "environment" // Usa la cámara trasera en dispositivos móviles
        },
        frequency: 10 // Ajusta la frecuencia de fotogramas
    },
    decoder: {
        readers: ["ean_reader"] // Solo lee EAN-13
    }
}, function(err) {
    if (err) {
        console.log(err);
        alert('Error al iniciar la cámara: ' + err);
        return;
    }
    console.log("Cámara inicializada con alta resolución");
    Quagga.start();
});


            // Manejar el resultado del escaneo
            Quagga.onDetected(function(result) {
                const code = result.codeResult.code;
                // Verifica que el código tenga 13 dígitos y solo números
                if (code.length === 13 && /^[0-9]+$/.test(code)) {
                    console.log("Código de barras escaneado: " + code);

                    // Detiene Quagga y oculta la cámara
                    Quagga.stop();
                    cameraContainer.style.display = 'none'; // Oculta el contenedor de la cámara
                    document.getElementById('barcodeSearch').value = code; // Autocompletar en el campo de búsqueda
                    executeSearch(); // Llama a la función de búsqueda
                }
            });
        });

        // Botón para cerrar la cámara
        document.getElementById('closeCameraButton').addEventListener('click', function() {
            document.getElementById('cameraContainer').style.display = 'none';
            Quagga.stop(); // Detener la cámara si está activa
        });

        // Función de filtrado de tabla
        document.getElementById('barcodeSearch').addEventListener('input', filterTable);
        document.getElementById('descriptionSearch').addEventListener('input', filterTable);

        function filterTable() {
            const barcodeValue = document.getElementById('barcodeSearch').value.toLowerCase();
            const descriptionValue = document.getElementById('descriptionSearch').value.toLowerCase();
            const rows = document.querySelectorAll('#productTable tbody tr');

            rows.forEach(row => {
                const barcode = row.cells[0].textContent.toLowerCase();
                const description = row.cells[1].textContent.toLowerCase();
                if (barcode.includes(barcodeValue) && description.includes(descriptionValue)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }
    </script>
</body>
</html>